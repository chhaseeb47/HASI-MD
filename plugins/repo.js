const fetch = require('node-fetch');
const config = require('../config');
const { cmd } = require('../command');

cmd({
    pattern: "repo",
    alias: ["sc", "script", "info"],
    desc: "Fetch GitHub repository information",
    react: "üìÇ",
    category: "info",
    filename: __filename,
},
async (conn, mek, m, { from, reply }) => {
    const githubRepoURL = 'https://github.com/chhaseeb47/HASI-MD';

    try {
        const [, username, repoName] = githubRepoURL.match(/github\.com\/([^/]+)\/([^/]+)/);
        const response = await fetch(`https://api.github.com/repos/${username}/${repoName}`);
        
        if (!response.ok) throw new Error(`GitHub API error: ${response.status}`);
        const repoData = await response.json();

        // Format 1: Classic Box
        const style1 = `‚ï≠‚îÄ‚îÄ‚îÄ„Äé ${config.BOT_NAME} REPO „Äè‚îÄ‚îÄ‚îÄ‚≥π
‚îÇ
‚îÇ üì¶ *Repository*: ${repoData.name}
‚îÇ üëë *Owner*: ${repoData.owner.login}
‚îÇ ‚≠ê *Stars*: ${repoData.stargazers_count}
‚îÇ ‚ëÇ *Forks*: ${repoData.forks_count}
‚îÇ üîó *URL*: ${repoData.html_url}
‚îÇ
‚îÇ üìù *Description*:
‚îÇ ${repoData.description || 'No description'}
‚îÇ
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚≥π
> ${config.DESCRIPTION}`;

        // Format 2: Minimalist
        const style2 = `‚Ä¢‚Äî‚Äî[ GITHUB INFO ]‚Äî‚Äî‚Ä¢
  ‚îÇ
  ‚îú‚îÄ üè∑Ô∏è ${repoData.name}
  ‚îú‚îÄ üë§ ${repoData.owner.login}
  ‚îú‚îÄ ‚ú® ${repoData.stargazers_count} Stars
  ‚îú‚îÄ ‚ëÇ ${repoData.forks_count} Forks
  ‚îÇ
  ‚Ä¢‚Äî‚Äî[ ${config.BOT_NAME} ]‚Äî‚Äî‚Ä¢
  > ${config.DESCRIPTION}`;

        // Format 3: Fancy Borders
        const style3 = `‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñÑ REPOSITORY INFO ‚ñÑ‚ñÄ‚ñÑ‚ñÄ‚ñÑ

  ‚ô¢ *Project*: ${repoData.name}
  ‚ô¢ *Author*: ${repoData.owner.login}
  ‚ô¢ *Stars*: ${repoData.stargazers_count} ‚ú®
  ‚ô¢ *Forks*: ${repoData.forks_count} ‚ëÇ
  ‚ô¢ *Updated*: ${new Date(repoData.updated_at).toLocaleDateString()}
  
  üîó ${repoData.html_url}
  
  > ${config.DESCRIPTION}`;

        // Format 4: Code Style
        const style4 = `‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ  ‚ö° ${config.BOT_NAME} REPO  ‚ö°  ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ ‚Ä¢ Name: ${repoData.name}
‚îÇ ‚Ä¢ Owner: ${repoData.owner.login}
‚îÇ ‚Ä¢ Stars: ${repoData.stargazers_count}
‚îÇ ‚Ä¢ Forks: ${repoData.forks_count}
‚îÇ ‚Ä¢ URL: ${repoData.html_url}
‚îÇ ‚Ä¢ Desc: ${repoData.description || 'None'}
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
> ${config.DESCRIPTION}`;

        // Format 5: Modern Blocks
        const style5 = `‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞ REPO INFO ‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞

  üè∑Ô∏è  *${repoData.name}*
  üë®‚Äçüíª  ${repoData.owner.login}
  
  ‚≠ê ${repoData.stargazers_count}  ‚ëÇ ${repoData.forks_count}
  üîó ${repoData.html_url}
  
  üìú ${repoData.description || 'No description'}
  
  > ${config.DESCRIPTION}`;

        // Format 6: Retro Terminal
        const style6 = `‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë   ${config.BOT_NAME} REPO    ‚ïë
‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
‚ïë > NAME: ${repoData.name}
‚ïë > OWNER: ${repoData.owner.login}
‚ïë > STARS: ${repoData.stargazers_count}
‚ïë > FORKS: ${repoData.forks_count}
‚ïë > URL: ${repoData.html_url}
‚ïë > DESC: ${repoData.description || 'None'}
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
> ${config.DESCRIPTION}`;

        // Format 7: Elegant
        const style7 = `‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ  üìÇ  REPO  ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚îÇ
‚îÇ *Project*: ${repoData.name}
‚îÇ *Author*: ${repoData.owner.login}
‚îÇ
‚îÇ ‚ú® ${repoData.stargazers_count} Stars
‚îÇ ‚ëÇ ${repoData.forks_count} Forks
‚îÇ
‚îÇ üîó ${repoData.html_url}
‚îÇ
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ  üìù  DESC  ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
${repoData.description || 'No description'}

> ${config.DESCRIPTION}`;

        // Format 8: Social Media Style
        const style8 = `‚ú¶ ${config.BOT_NAME} Repository ‚ú¶

üìå *${repoData.name}*
üë§ @${repoData.owner.login}

‚≠ê ${repoData.stargazers_count} Stars | ‚ëÇ ${repoData.forks_count} Forks
üîÑ Last updated: ${new Date(repoData.updated_at).toLocaleDateString()}

üîó GitHub: ${repoData.html_url}

${repoData.description || 'No description available'}

> ${config.DESCRIPTION}`;

        // Format 9: Fancy List
        const style9 = `‚ïî‚ô´‚ïêüéß‚ïê‚ô´‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
   ${config.BOT_NAME} REPO
‚ïö‚ô´‚ïêüéß‚ïê‚ô´‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

‚Ä¢„Éª„Çú„Çú„Éª* ‚úß  *„Éª„Çú„Çú„Éª‚Ä¢
 ‚úß *Name*: ${repoData.name}
 ‚úß *Owner*: ${repoData.owner.login}
 ‚úß *Stars*: ${repoData.stargazers_count}
 ‚úß *Forks*: ${repoData.forks_count}
‚Ä¢„Éª„Çú„Çú„Éª* ‚úß  *„Éª„Çú„Çú„Éª‚Ä¢

üîó ${repoData.html_url}

${repoData.description || 'No description'}

> ${config.DESCRIPTION}`;

        // Format 10: Professional
        const style10 = `‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
‚îÉ  REPOSITORY REPORT  ‚îÉ
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ

‚óà Project: ${repoData.name}
‚óà Maintainer: ${repoData.owner.login}
‚óà Popularity: ‚òÖ ${repoData.stargazers_count} | ‚ëÇ ${repoData.forks_count}
‚óà Last Update: ${new Date(repoData.updated_at).toLocaleDateString()}
‚óà URL: ${repoData.html_url}

Description:
${repoData.description || 'No description provided'}

> ${config.DESCRIPTION}`;

        const styles = [style1, style2, style3, style4, style5, style6, style7, style8, style9, style10];
        const selectedStyle = styles[Math.floor(Math.random() * styles.length)];

        // Send image with repo info
        await conn.sendMessage(from, {
            image: { url: config.MENU_IMAGE_URL || 'https://files.catbox.moe/8lxlpq.jpg' },
            caption: selectedStyle,
            contextInfo: { 
                mentionedJid: [m.sender],
                forwardingScore: 999,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: '120363300351654980@newsletter',
                    newsletterName: config.OWNER_NAME || 'œá –ΩŒ±—ïŒπ',
                    serverMessageId: 143
                }
            }
        }, { quoted: mek });

        // Send audio
        await conn.sendMessage(from, {
            audio: { url: 'https://files.catbox.moe/vux548.mp4' },
            mimetype: 'audio/mp4',
            ptt: true,
            contextInfo: { 
                mentionedJid: [m.sender],
                forwardingScore: 999,
                isForwarded: true
            }
        }, { quoted: mek });

    } catch (error) {
        console.error("Repo command error:", error);
        reply(`‚ùå Error: ${error.message}`);
    }
});
